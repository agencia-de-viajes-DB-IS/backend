name: .NET Core Build

on:
 workflow_dispatch:

jobs:
 build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 8.0.100

    - name: Restore dependencies
      run: |
        cd ./src
        dotnet restore

    - name: Build
      run: |
        cd ./src
        dotnet build --no-restore
    
    - name: Check Path
      run: ls 

    - name: Execute
      run: dotnet run --project '.\src\TravelAgency.Api\TravelAgency.Api.csproj' --environment "Development" &
    
    - name: Install ngrok 
      run:  curl -s https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null && echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | sudo tee /etc/apt/sources.list.d/ngrok.list && sudo apt update && sudo apt install ngrok
    
    - name: Auth ngrok 
      run: ngrok config add-authtoken ${{ secrets.NGROK_AUTH_TOKEN }}

    - name: 
      run: ngrok http 5000 &

    - name: Install jq
      run: sudo apt-get install jq

    - name: Get ngrok URL
      run: |
        echo "NGROK_URL=$(curl -s http://localhost:4040/api/tunnels | jq -r '.tunnels[0].public_url')" >> $GITHUB_ENV

    - name: Print ngrok URL
      run: echo "${{ env.NGROK_URL }}"

    # TODO: need to decide a default branch to tests (for example develop) in 
    # the frontend project 
    # - name: Checkout target repository
    #   uses: actions/checkout@v2
    #   with:
    #      repository: Albaros02- 
    #      token: ${{ secrets.TARGET_REPO_TOKEN }}
    # - name: Make changes
    #   run: echo "NGROK_URL=${{ env.NGROK_URL }}" > NGROK_ENV.env

    # - name: Configure Git
    #   run: |
    #      git config --global user.name "GitHubWorkFlow"
    #      git config --global user.email "name@mail.com"
         
    # - name: Commit and push changes
    #   run: |
    #      git add ./NGROK_ENV.env
    #      git commit -m "Update ngrok Url"
    #      git push 
         
    - name: Loop 
      run: |
         start=$(date +%s)
         while : ; do
           echo "Running..."
           sleep 1
           current=$(date +%s)
           elapsed=$((current - start))
           if ((elapsed > 18000)); then
             break
           fi
         done
